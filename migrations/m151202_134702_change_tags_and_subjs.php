<?php

use yii\db\Schema;
use yii\db\Migration;
use yii\helpers\ArrayHelper;

use app\models\Tags;
use app\models\Message;
use app\models\Msgtags;


class m151202_134702_change_tags_and_subjs extends Migration
{
    public $aTags = [ // new_tag => old_tag

    ];

    public $aSubj = [ // new_subj => old_subj
        'Прием в образовательную организацию' => [
            'old_subj' => 'Запись в школу',
            // new_tag => old_tag
            'tags' => [
                'Зачисление в образовательные организации детей, зарегистрированных на территории города Москвы (в том числе в специальные коррекционные)' => ['запись в школу', 'перевод в другую школу', 'перевод в другой класс', 'перевод в другой корпус', 'перевод в другое здание', 'объединение классов', 'перевод на класс ниже', ],
                'Зачисление в образовательные организации детей, незарегистрированных на территории города Москвы (в том числе в специальные коррекционные)' => '',
                'Порядок приема в 1 класс' => '',
                'Регистрация заявлений о приеме детей в 1 класс через Портал Государственных услуг или окружные системы информационной поддержки' => '',
            ],
        ],
        'Проведение последнего звонка, выпускного бала для обучающихся в образовательных организациях' => [
            'old_subj' => 'Выпускные вечера',
            'tags' => ['Проведение последнего звонка, выпускного бала для обучающихся в образовательных организациях' => ['вручение аттестатов', 'выпускной', 'последний звонок'],],
        ],
        'Экзамены (Государственная итоговая аттестация, Единый государственный экзамен), учебный процесс в образовательных организациях' => [
            'old_subj' => 'Государственная итоговая аттестация (ЕГЭ; ОГЭ; ГВЭ)',
            'tags' => [
                'Организация и проведение Единого государственного экзамена, Государственной итоговой аттестации в образовательных организациях' => ['ГИА', 'ЕГЭ', 'ОГЭ'],
                'Организация работы Пункта приема экзаменов в образовательной организации' => '',
                'Получение выпускниками образовательных организаций похвальных листов, "золотой" и "серебряной" медалей' => 'золотая медаль',
            ],
        ],
        'Предоставление дополнительного образования (кружки, секции и прочее) на базе государственных образовательных организаций и учреждений дополнительного образования (дворец, дом, центр творчества, станция юных техников и прочее)' => [
            'old_subj' => 'Дополнительные образовательные услуги',
            'tags' => ['Предоставление дополнительного образования (кружки, секции и прочее) на базе государственных образовательных организаций и учреждений дополнительного образования (дворец, дом, центр творчества, станция юных техников и прочее)' => ['подготовка к школе', 'платные услуги', 'группа продленного дня', 'группы продленного дня', 'ГТО', 'дополнительное образование', 'запись на программы дополнительного образования', 'олимпиады', 'сотрудничество', ],],
        ],
        'Конфликтные ситуации в образовательных организациях' => [
            'old_subj' => ['Жалобы на действия администрации', 'Жалобы на действия педагогов', ],
            'tags' => ['Конфликтные ситуации в образовательных организациях' => ['жалоба на медицинского работника', 'жалоба на учащегося', 'жалоба на директора', 'жалоба на действия директора', 'бытовая жалоба на директора', 'график работы воспитателей', 'диспансеризация педагогов', 'жалоба на действия администрации', 'увольнение педагогов', 'увольнение директора', 'сайт учреждения', 'жалоба на действия ПМПК', 'жалоба на действия педагога', 'жалобы на действия педагогов', 'жалоба на учащегося', 'другое'], ],
        ],
        'Прием в государственную образовательную организацию, реализующую программы дошкольного образования' => [
            'old_subj' => 'Комплектование дошкольных групп',
            'tags' => [
                'Вопросы по устройству детей, незарегистрированных на территории города Москвы, в образовательные организации, реализующие программы дошкольного образования' => '',
                'Вопросы, по устройству детей в  образовательные организации, реализующие программы дошкольного образования, по месту проживания или по конкретному (желаемому) учреждению' => ['комплектование дошкольных групп', 'комплектация групп д/с', 'запись в детский сад', 'перевод в другую группу ДОУ', 'перевод в другой детский сад', 'расформирование групп', 'ясли', 'очередность в ДОУ', 'работа Групп кратковременного пребывания', 'работа групп кратковременного пребывания', 'объединение групп'],
                'Запись ребенка в Автоматизированной информационной системе (зачисление в образовательную организацию, реализующую программы дошкольного образования)' => '',
            ],
        ],
        'Отдых,  выезд детей, обучающихся в образовательных организациях' => [
            'old_subj' => 'Летние лагеря',
            'tags' => ['Отдых,  выезд детей, обучающихся в образовательных организациях' => ['летние лагеря', 'летний отдых', 'каникулы', 'путевка в артек'],],
        ],
        'Лицензирование, аккредитация, аттестация, проверки образовательных организаций' => [
            'old_subj' => ['Апостиль', 'Лицензирование и аккредитация', ],
            'tags' => [
                'Апостиль (подтверждение документов, выданных в Российской Федерации для предоставления за границей, выданных иностранными государствами для использования в Российской Федерации) в образовательных организациях' => 'апостиль',
                'Порядок предоставления услуги (место, срок, госпошлина), качество предоставления услуг (лицензирование, аккредитация, апостиль) в образовательных организациях' => ['лицензирование', 'аккредитация'],
                'Наличие лицензии, аккредитации у образовательной организации, срок действия документа' => '',
                'Аттестация педагогических работников' => 'аттестация педагогов',
            ],
        ],
        'Безопасность жизнеобеспечения детей в образовательных организациях' => [
            'old_subj' => 'Охрана',
            'tags' => [
                'Наличие и функционирование средств безопасности (видеокамеры, домофон и т.д.) в образовательных организациях' => ['безопасность', 'паспорт дорожной безопасности', 'проход родителей в школу', 'охрана'],
                'Охрана труда в образовательных организациях' => '',
                'Соблюдение правил безопасности, травматизм, несчастные случаи в образовательных организациях' => 'травма',
                'Санитарно-гигиенический режим в образовательных организациях' => '',
            ],
        ],
        'Питание в образовательных организациях' => [
            'old_subj' => 'Питание',
            'tags' => [
                'О поставке продуктов в образовательные организации,  о качестве поставляемой продукции, о рационе питания' => ['питание', 'питание в школе', 'проход и питание'],
                'Состояние санитарно-эпидемиологических требований к пищеблокам образовательных организаций' => '',
                'Предоставление льготного питания, питания в каникулярные и субботние дни в образовательных организациях' => '',
            ],
        ],
        'Благоустройство территории образовательной организации' => [
            'old_subj' => '',
            'tags' => ['Благоустройство территории образовательной организации' => ['благоустройство территории', 'организация стоянки велосипедов', 'курение на территории']],
        ],
        'Ремонт зданий, помещений образовательных организаций' => [
            'old_subj' => 'Ремонт и Строительство',
            'tags' => [
                'Ремонт зданий, помещений образовательных организаций' => ['благоустройство классов', 'ввод в строй здания новостройки', 'ремонт'],
                'Эксплуатация, содержание организаций (сроки, качество и виды ремонтных работ)' => ['бытовая жалоба', 'бытовой вопрос', 'отопление'],
            ],
        ],
        'Выплата компенсации части родительской платы за содержание ребёнка в образовательных организация' => [
            'old_subj' => 'Родительская плата',
            'tags' => ['Выплата компенсации части родительской платы за содержание ребёнка в образовательных организация' => ['оплата услуг', 'льгота', 'льготы', 'льготы по оплате детского сада', 'компенсация родительской платы', 'выплаты', 'родительская плата', 'поборы'],],
        ],
        'Учебники; учебные пособия' => [
            'old_subj' => 'Учебная литература',
            'tags' => [
                'Приобретение учебников и учебных пособий в общеобразовательных организациях (сбор средств)' => 'учебники',
                'Учебники, учебные пособия используемые в образовательных организациях' => '',
                'Издание учебных пособий' => '',
            ],
        ],
        'Готовность к новому учебному году образовательных организаций' => [
            'old_subj' => '',
            'tags' => ['Готовность к новому учебному году образовательных организаций' => ['подготовка к началу нового учебного года', 'линейка', '1 сентября'],],
        ],
        'Прием в организации среднего профессионального образования' => [
            'old_subj' => '',
            'tags' => [
                'Материальные выплаты обучающимся в организациях среднего профессионального образования' => ['перевод на бюджет', 'стипендия', ],
                'Обеспечение обучающихся документацией (студенческие билеты, справки, дубликаты, проездные и т.д.) в организациях среднего профессионального образования' => '',
                'Прием граждан из регионов и стран независимых государств в учреждения среднего профессионального образования' => '',
                'Прием граждан, зарегистрированных в Москве и Подмосковье, в учреждения среднего профессионального образования' => ['поступление в колледж', 'специальное образование', 'запись в колледж', 'профессиональное образование', 'перевод в другой колледж', ],
            ],
        ],
        'Защита прав участников образовательного процесса в образовательных организациях' => [
            'old_subj' => '',
            'tags' => [
                'Организация обучения детей с ограниченными возможностями здоровья и других категорий обучающихся в образовательных организациях' => ['коррекционный класс', 'поддержка для многодетных семей', 'интернат', 'перевод в коррекционную группу ДОУ', 'коррекционные группы ДОУ'],
                'Получение детьми образования в различных формах в образовательных организациях' => ['обеспечение учебного процесса', 'обучение', 'экстернат', 'индивидуальный график посещения', 'иностранный язык в школе', 'кадеты', 'черчение', 'целевое направление', 'социальный педагог', 'практика', ],
            ],
        ],
        'Организация образовательного процесса в образовательных организациях' => [
            'old_subj' => 'Электронный журнал и дневник',
            'tags' => [
                'Организация индивидуального обучения на дому, дистанционное обучение в образовательных организациях' => ['семейное обучение', 'семейный детский сад', 'организация учебного процесса', 'система обучения', 'дистанционное обучение', 'попредметное обучение', ],
                'Порядок и периодичность промежуточной аттестации (включая объективность выставления оценок) в образовательных организациях' => ['критерии оценивания', 'высталение оценок', 'Электронный журнал и дневник', 'МРКО', 'система оценок'],
                'Психолого-педагогическое сопровождение детей с ограниченными возможностями здоровья в образовательных организациях' => ['психологи в школах', 'логопед', 'логопеды в детский садах', 'психологи в детских садах', 'ЦПМПК', 'ципр', 'няни в детских садах', 'ПМПК'],
            ],
        ],
        'Открытие, закрытие и реорганизация образовательных организаций' => [
            'old_subj' => '',
            'tags' => ['Открытие, закрытие и реорганизация образовательных организаций' => ['реорганизация', 'закрытие колледжа', 'закрытие факультета', 'изменение статуса ОО', 'открытие детского сада', 'расформирование детского сада', 'закрытие детского сада', 'Новая школа', 'объединение школ', 'присоединение к школе', 'открытие школы', ],],
        ],
        'Качество общего образования в образовательных организациях' => [
            'old_subj' => 'Благодарности',
            'tags' => [
                'Выполнение образовательными организациями Федеральных образовательных стандартов, Федерального базисного учебного плана' => ['новеллы законодательства в сфере образования', 'мцко', ],
                'Соблюдение гигиенических требований к режиму образовательного процесса, установленных санитарными правилами и нормами, в образовательной организации' => ['школьная форма', 'расписание', 'вторая смена', 'комплектация классов', 'кварцевание групп в ДОУ', 'карантин', 'продолжительность обучения в детском саду', 'отчисление из детского сада', 'работа дошкольных групп в летний период', 'питьевой режим', 'Режим работы ОО', 'углубленное обучение', 'переход на 5-ти дневку', 'отсутствие уроков физкультуры', 'профильное обучение'],
                'Соответствие педагога квалификационным характеристикам,  уровень профессиональной компетентности руководства и педагогов образовательной организации' => ['рейтинг', 'благодарность', 'в поддержку директора.', 'в поддержку няни', 'в поддержку учителя', 'в поддержку школы', 'опровержение на жалобу', 'тьютор', 'Создание психолого-педагогического консилиума', 'награждение', 'сокращение учебных часов', 'смена педагога', 'ПНПО', ],
                'Уровень материально-технического обеспечения образовательного процесса в образовательных организациях' => ['финансирование ОО', 'игрушки в д/с', 'коммерческое обучение', 'частный детский сад', 'платная группа д/с', 'задолженность по оплате коммунальных услуг.', 'социальная карта', 'карта учащегося', 'оснащение учебного кабинета', 'транспорт до школы', 'МОС', ],
            ],
        ],
        'Трудоустройство граждан' => [
            'old_subj' => '',
            'tags' => [
                'Подбор вариантов вакансий трудоустройства' => ['вакансии', 'вакансии в ОО', 'трудоустройство', 'трудоустройство педагогов', 'кадры'],
                'Трудоустройство молодых специалистов' => '',
            ],
        ],
        'Предоставление билетов и организация досуга' => [
            'old_subj' => '',
            'tags' => [
                'Выделение билетов на новогодние праздничные мероприятия, мероприятия, посвященные памятным датам и государственным праздникам, другие общественные мероприятия' => ['билеты в театр', 'билеты на елку', 'экскурсии'],
                'Организация детского, молодежного, семейного досуга' => ['театр в школе', 'благотворительная акция', ],
            ],
        ],
        'Рассмотрение обращений граждан' => [
            'old_subj' => '',
            'tags' => [
                'Соблюдение Федерального закона "О порядке рассмотрения обращений граждан"' => ['в дополнение к предыдущему обращению.', 'для сведения'],
                'Прекращение рассмотрения предыдущего обращения по просьбе автора' => ['не актуально', 'о снятии с контроля', 'вопрос решен'],
                'Порядок рассмотрения обращений граждан' => ['обращение юридического лица', 'порядок рассмотрения жалоб', 'вопрос не нашей компетенции', 'не наш вопрос', 'СПАМ', 'СПАМ.', 'не Москва', 'не по адресу.', 'повтор', 'повтор.', 'личный прием', ],
            ],
        ],
        'Права, свободы и обязанности человека и гражданина (за исключением международной защиты прав человека)' => [
            'old_subj' => '',
            'tags' => ['Право на вознаграждение за труд' => ['выплаты педагогам', 'зарплата педагогов', 'зарплата персонала'],],
        ],
        'Предоставление архивной информации' => [
            'old_subj' => '',
            'tags' => [
                'Предоставление архивной информации об учебе' => ['выдача документов', 'документы', 'нормативные документы', 'запрос архивных документов', 'аттестат', 'восстановление аттестата'],
                'Порядок предоставления архивных документов организациями' => '',
            ],
        ],
        'Приобретение жилых помещений в собственность (с привлечением собственных средств)' => [
            'old_subj' => '',
            'tags' => ['Приобретение жилых помещений в собственность по городским программам (с привлечением собственных средств)' => 'ипотека для молодых учителей',],
        ],
        'Организация работы с семьями с детьми' => [
            'old_subj' => '',
            'tags' => [
                'Учет детей, подлежащих обучению в образовательных учреждениях' => ['определение места жительства', 'родительское собрание', ],
            ],
        ],
        'Официальные сайты (порталы) Правительства Москвы и органов исполнительной власти города Москвы' => [
            'old_subj' => '',
            'tags' => [
                'Информационное сопровождение официальные сайтов (порталов) органов исполнительной власти города Москвы' => '',
                'Организация и поддержание работы официального портала Мэра и Правительства Москвы (информационное сопровождение)' => '',
                'Работа порталов Правительства Москвы' => '',
            ],
        ],
        'Деятельность ОИВ' => [
            'old_subj' => '',
            'tags' => [
                'ОИВ г. Москвы' => '',
                'Отклики на деятельность ОИВ и ПМ' => '',
            ],
        ],
        'Градостроительство и архитектура' => [
            'old_subj' => '',
            'tags' => [
                'Мнение граждан по размещению (строительству) объектов образования.' => '',
                'Реакция граждан на ведущееся за счет бюджетных средств города строительство социальных объектов (образования, физкультуры и спорта, социального назначения, Главного управления внутренних дел Москвы) (в том числе протесты против строительства)' => '',
                'Влияние ведущегося строительства на окружающую застройку и инженерные коммуникации.' => '',
                'Перевод на постоянные источники инженерного обеспечения социальных объектов (образования, физкультуры и спорта, социального и прочего  назначения, Главного управления внутренних дел Москвы)' => '',
                'Соблюдение сроков строительства и ввода в эксплуатацию социальных объектов (образования, физкультуры и спорта, социального и прочего назначения, Главного управления внутренних дел Москвы)' => '',
                'Устранение строительных недоделок на введенных социальных объектах (в детские садах, школах, блоках начальных классов и прочее)' => '',
                'Новые типовые проекты общеобразовательных и дошкольных учреждений' => '',
                'Типовые проекты объектов социальной инфраструктуры (кроме общеобразовательных и дошкольных учреждений)' => '',
                'Включение объектов социального назначения (физкультурно-оздоровительные комплексы, дошкольные образовательные учреждения, школы, поликлиники) в Адресно-инвестиционную программу' => '',
                'Строительство гражданского и социального назначения' => 'строительство',
            ],
        ],
        'Предоставление услуг амбулаторно-поликлиническими объединениями' => [
            'old_subj' => '',
            'tags' => [
                'Вакцинация, профилактика инфекционных заболеваний.' => '',
                'Диспансеризация детского населения' => '',
                'Диспансеризация детского населения' => '',
                'Работа поликлиник по обслуживанию детского населения' => ['медицинская карта', 'медицинская помощь', 'нет медицинской помощи в школе', 'медосмотр'],
            ],
        ],
        'Прием в высшие учебные заведения, перевод' => [
            'old_subj' => '',
            'tags' => [
                'Прием в высшие учебные заведения, перевод' => 'условия поступления в вуз',
            ]
        ],
        'Информационные кампании и информационная поддержка' => [
            'old_subj' => '',
            'tags' => [
                'Информационная поддержка мероприятий в печатных средствах массовой информации' => 'сми',
                'Информационная поддержка мероприятий на теле-, радиоканалах и в иных электронных средствах массовой информации' => '',
                'Проведение информационных кампаний' => '',
            ]
        ],
    ];

    public function up()
    {
        return true;
        mb_internal_encoding('UTF-8');

        $aConvertSubj = [];
        $aConvertTags = [];
        foreach($this->aSubj As $sNewSubj => $aData) {
            $oldSubj = $aData['old_subj'];
            $aTags = $aData['tags'];
            if( !empty($aTags) ) {
                foreach($aTags As $newTag => $aOldTags) {
                    if( $newTag == '' ) {
                        continue;
                    }

                    if( empty($aOldTags) ) {
                        if( !isset($aConvertTags['']) ) {
                            $aConvertTags[''] = [];
                        }
                        $aConvertTags[''][] = $newTag;
                        continue;
                    }

                    if( !is_array($aOldTags) ) {
                        $aOldTags = [$aOldTags];
                    }
                    foreach($aOldTags As $v) {
                        $aConvertTags[mb_strtolower($v)] = ['old_tag_id' => null, 'new_tag_name' => $newTag];
                    }
                }
            }

            if( empty($oldSubj) ) {
                if( !isset($aConvertSubj['']) ) {
                    $aConvertSubj[''] = [];
                }
                $aConvertSubj[''][] = $sNewSubj;
                continue;
            }
            if( !is_array($oldSubj) ) {
                $oldSubj = [$oldSubj];
            }
            foreach($oldSubj As $v) {
                $aConvertSubj[mb_strtolower($v)] = ['old_subj_id' => null, 'new_subj_name' => $sNewSubj];
            }
        }

        $bErrorFinal = false;
//        $nMaxTagId = 249; // на утро 03.12.2015
        $nMaxTagId = Tags::find()->orderBy('tag_id DESC')->select('tag_id')->scalar();
        echo "\n\nnMaxTagId = {$nMaxTagId}\n\n";

        // выгребаем старые темы
        $aSubjData = Tags::find()->where(['tag_type' => Tags::TAGTYPE_SUBJECT, 'tag_title' => array_keys($aConvertSubj)])->all();
        foreach($aSubjData As $oSubj) {
            $sSubj = mb_strtolower($oSubj->tag_title);
            if( !isset($aConvertSubj[$sSubj]) ) {
                echo 'Not exists old subject: ' . mb_convert_encoding($oSubj->tag_title, 'CP-866') . "\n";
                $this->printStr('Not exists old subject: ' . $oSubj->tag_title . "\n");
                $bErrorFinal = true;
                continue;
            }
            $aConvertSubj[$sSubj]['old_subj_id'] = $oSubj->tag_id;
        }

        foreach($aConvertSubj As $k=>$v) {
            if( $k == '' ) {
                continue;
            }
            if( $v['old_subj_id'] === null ) {
                $bErrorFinal = true;
                $this->printStr('Not exists old subject in DB: ' . $k . "\n");
            }
        }

        // выгребаем старые теги
        $aTagsData = ArrayHelper::map(
            Tags::find()->where(['tag_type' => Tags::TAGTYPE_TAG, ])->all(),
            'tag_id',
            function($ob) { return ['title' => $ob->tag_title, 'used' => false,]; }
        );

        foreach($aTagsData As $id => $aData) {
            $sOldTag = mb_strtolower($aData['title']);
            if( !isset($aConvertTags[$sOldTag]) ) {
                $this->printStr("Not found new tag for [$id] {$aData['title']}\n");
                $bErrorFinal = true;
                continue;
            }
            $aTagsData[$id]['used'] = true;
            $aConvertTags[$sOldTag]['old_tag_id'] = $id;
        }

        foreach($aConvertTags As $k=>$v) {
            if( $k == '' ) {
                continue;
            }
            if( $v['old_tag_id'] === null ) {
//                $bErrorFinal = true;
//                $this->printStr('Not exists old tag in DB: ' . $k . "\n");
            }
        }


//        Yii::info(print_r($aConvertSubj, true));
//        Yii::info(print_r($aConvertTags, true));

        $bErrorFinal = !$this->updateSubjects($aConvertSubj, $nMaxTagId);

        if( !$bErrorFinal ) {
            $bErrorFinal = !$this->updateTags($aConvertTags, $nMaxTagId);
        }

        if( $bErrorFinal ) {
            echo 'Migration not finished' . "\n";
            return false;
        }

        if( $bErrorFinal ) {
            return $bErrorFinal;
        }

        Yii::info(print_r($aConvertSubj, true));
        Yii::info(print_r($aConvertTags, true));

        $this->addColumn('{{%tags}}', 'tag_parent_id', Schema::TYPE_INTEGER . ' Default NULL');
        $this->refreshCache();

        $this->updateParents($nMaxTagId);

        echo 'Migration finished' . "\n";
//        return false;

    }

    public function down()
    {
    }

    public function updateSubjects(&$aConvertSubj, $nMaxTagId)
    {
        // msg_subject
        // Tags::find()->where(['tag_type' => Tags::TAGTYPE_SUBJECT, 'tag_title' => array_keys($aConvertSubj)])->all();
        foreach($aConvertSubj As $sOldSubj => $aData) {
            if( $sOldSubj != '' ) {
                $oNew = Tags::find()->where(['And', ['=', 'tag_type', Tags::TAGTYPE_SUBJECT], ['=', 'tag_title', $aData['new_subj_name']], ['>', 'tag_id', $nMaxTagId]])->one();
                if( $oNew === null ) {
                    $oNew = new Tags();
                    $oNew->attributes = [
                        'tag_active' => 1,
                        'tag_title' => $aData['new_subj_name'],
                        'tag_type' => Tags::TAGTYPE_SUBJECT,
                    ];
                    if( !$oNew->save() ) {
                        $this->printStr('Error save new subj: ' . $aData['new_subj_name'] . ' ' . print_r($oNew->getErrors(), true));
                        return false;
                    }
                }
                $aConvertSubj[$sOldSubj]['new_subj_id'] = $oNew->tag_id;
                $sSql = 'Update ' . Message::tableName() . ' Set msg_subject = :newid Where msg_subject = :oldid';
                $nRes = Yii::$app->db->createCommand($sSql, [':newid' => $oNew->tag_id, ':oldid' => $aData['old_subj_id']])->execute();
//                $this->printStr('Update subj (' . $nRes . ') ' . $aData['old_subj_id'] . ' -> ' . $oNew->tag_id . "\n");
            }
            else {
                foreach($aData as $v) {
                    $oNew = Tags::find()->where(['And', ['=', 'tag_type', Tags::TAGTYPE_SUBJECT], ['=', 'tag_title', $v], ['>', 'tag_id', $nMaxTagId]])->one();
                    if( $oNew === null ) {
                        $oNew = new Tags();
                        $oNew->attributes = [
                            'tag_active' => 1,
                            'tag_title' => $v,
                            'tag_type' => Tags::TAGTYPE_SUBJECT,
                        ];
                        if( !$oNew->save() ) {
                            $this->printStr('Error save new empty subj: ' . $v . ' ' . print_r($oNew->getErrors(), true));
                            return false;
                        }
                    }
//                    $this->printStr('New subj: ' . $oNew->tag_title . "\n");
                }
            }
        }
        $sSql = 'Update ' . Tags::tableName() . ' Set tag_active = 0 Where tag_id <= ' . $nMaxTagId . ' And tag_type = ' . Tags::TAGTYPE_SUBJECT;
        $nRes = Yii::$app->db->createCommand($sSql)->execute();
        $this->printStr('Set no use subj: ' . $nRes . "\n");
        return true;
    }

    public function updateTags(&$aConvertTags, $nMaxTagId)
    {
        foreach($aConvertTags As $sOldTag => $aData) {
            if( $sOldTag != '' ) {
                if( $aData['old_tag_id'] === null ) {
                    $this->printStr('Not exists old tag: ' . $sOldTag . ' new = ' . $aData['new_tag_name'] . "\n");
                    continue;
                }
                // $aConvertTags[mb_strtolower($v)] = ['old_tag_id' => null, 'new_tag_name' => $newTag];
                $oNew = Tags::find()->where(['And', ['=', 'tag_type', Tags::TAGTYPE_TAG], ['=', 'tag_title', $aData['new_tag_name']], ['>', 'tag_id', $nMaxTagId]])->one();
                if( $oNew === null ) {
                    $oNew = new Tags();
                    $oNew->attributes = [
                        'tag_active' => 1,
                        'tag_title' => $aData['new_tag_name'],
                        'tag_type' => Tags::TAGTYPE_TAG,
                    ];
                    if( !$oNew->save() ) {
                        $this->printStr('Error save new tag: ' . $aData['new_tag_name'] . ' ' . print_r($oNew->getErrors(), true));
                        return false;
                    }
                }
                $aConvertTags[$sOldTag]['new_tag_id'] = $oNew->tag_id;
                $sSql = 'Update ' . Msgtags::tableName() . ' Set mt_tag_id = :newid Where mt_tag_id = :oldid';
                $nRes = Yii::$app->db->createCommand($sSql, [':newid' => $oNew->tag_id, ':oldid' => $aData['old_tag_id']])->execute();
//                $this->printStr('Update tag (' . $nRes . ') ' . $aData['old_tag_id'] . ' -> ' . $oNew->tag_id . "\n");
            }
            else {
                $nCouNew = 0;
                foreach($aData as $v) {
                    $oNew = Tags::find()->where(['And', ['=', 'tag_type', Tags::TAGTYPE_TAG], ['=', 'tag_title', $v], ['>', 'tag_id', $nMaxTagId]])->one();
                    if( $oNew === null ) {
                        $oNew = new Tags();
                        $oNew->attributes = [
                            'tag_active' => 1,
                            'tag_title' => $v,
                            'tag_type' => Tags::TAGTYPE_TAG,
                        ];
                        if( !$oNew->save() ) {
                            $this->printStr('Error save new empty tag: ' . $v . ' ' . print_r($oNew->getErrors(), true));
                            return false;
                        }
                    }
                    $nCouNew++;
                }
//                $this->printStr('New add tags: ' . $nCouNew . "\n");
            }
        }
        $sSql = 'Update ' . Tags::tableName() . ' Set tag_active = 0 Where tag_id <= ' . $nMaxTagId . ' And tag_type = ' . Tags::TAGTYPE_TAG;
        $nRes = Yii::$app->db->createCommand($sSql)->execute();
        $this->printStr('Set no use tags: ' . $nRes . "\n");
        return true;
    }

    public function updateParents($nMaxTagId)
    {
        foreach($this->aSubj As $sNewSubj => $aData) {
            $oSubj = Tags::find()->where(['And', ['=', 'tag_type', Tags::TAGTYPE_SUBJECT], ['=', 'tag_title', $sNewSubj], ['>', 'tag_id', $nMaxTagId]])->one();
            if( $oSubj === null ) {
                $this->printStr('NOT FOUND SUBJ: ' . $sNewSubj . "\n");
                continue;
            }
            foreach($aData['tags'] As $sNewTag => $aTags) {
                $oTag = Tags::find()->where(['And', ['=', 'tag_type', Tags::TAGTYPE_TAG], ['=', 'tag_title', $sNewTag], ['>', 'tag_id', $nMaxTagId]])->one();
                if( $oTag === null ) {
                    $this->printStr('NOT FOUND TAG: ' . $sNewTag . "\n");
                    continue;
                }
                $oTag->tag_parent_id = $oSubj->tag_id;
                if( !$oTag->save() ) {
                    $this->printStr('Error save TAG parent for ' . $sNewTag . " [{$sNewSubj}] " . print_r($oTag->getErrors(), true)."\n");
                }
            }
        }
    }

    public function refreshCache()
    {
        Yii::$app->db->schema->refresh();
        Yii::$app->db->schema->getTableSchemas();
    }

    public function printStr($s)
    {
        if( DIRECTORY_SEPARATOR == '\\' ) {
            $s = mb_convert_encoding($s, 'CP-866');
        }
        echo $s;
    }

    /*
   // Use safeUp/safeDown to run migration code within a transaction
   public function safeUp()
   {
   }

   public function safeDown()
   {
   }
   */
}
